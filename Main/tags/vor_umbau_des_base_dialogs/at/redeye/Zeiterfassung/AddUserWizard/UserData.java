/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserData.java
 *
 * Created on 13.05.2010, 09:57:15
 */

package at.redeye.Zeiterfassung.AddUserWizard;

import at.redeye.FrameWork.base.AutoMBox;
import at.redeye.FrameWork.base.BaseDialog;
import at.redeye.FrameWork.base.BindVarBase;
import at.redeye.FrameWork.base.BindVarInterface;
import at.redeye.FrameWork.base.Root;
import at.redeye.FrameWork.base.transaction.Transaction;
import at.redeye.FrameWork.utilities.MD5Calc;
import at.redeye.FrameWork.utilities.StringUtils;
import at.redeye.UserManagement.bindtypes.DBPb;
import at.redeye.UserManagement.bindtypes.DBPermissionLevelInteger;
import at.redeye.UserManagement.impl.AdminDlg;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author martin
 */
public class UserData extends javax.swing.JPanel {

        static class UserRightsPair extends BindVarInterface.Pair {

        JComboBox combobox;
        DBPermissionLevelInteger value;

        public UserRightsPair(JComboBox combobox, DBPermissionLevelInteger value) {
            this.combobox = combobox;
            this.value = value;
        }

        public void gui_to_var() {
            value.loadFromString(combobox.getSelectedItem().toString());
        }

        public void var_to_gui() {
            for( int i = 0; i < combobox.getItemCount(); i++ )
            {
                Object o  = combobox.getItemAt(i);

                if( o.toString().equals(value.toString()) )
                {
                    combobox.setSelectedIndex(i);
                    return;
                }
            }
        }

        @Override
        public JComboBox get_first() {
            return combobox;
        }

        @Override
        public DBPermissionLevelInteger get_second() {
            return value;
        }
    }

    DBPb pb = new DBPb();
    BindVarBase bind_vars = new BindVarBase();
    protected static Logger logger = Logger.getLogger(UserData.class.getName());
    Transaction trans;
    Root root;
    BaseDialog base;

    /** Creates new form UserData */
    public UserData( Root root, BaseDialog base ) {
        initComponents();

        this.trans = base.getTransaction();
        this.root = root;
        this.base = base;

        jCUserRights.removeAllItems();

        // nur die Werte zulassen, die man als Berechtigungsstufe selber hat,
        // aber nicht einfach eine hÃ¶here Berechtigungsstufe zulassen.
        DBPermissionLevelInteger level = new DBPermissionLevelInteger("level","level");

        for( String val : pb.plevel.getPossibleValues() )
        {
            level.loadFromString(val);
            
            if( level.getValue()  <= root.getUserPermissionLevel() )
                jCUserRights.addItem(val);
        }

        bind_vars.bindVar(jtTitle, pb.title);
        bind_vars.bindVar(jTforename, pb.name);
        bind_vars.bindVar(jTsurname, pb.surname);
        bind_vars.bindVar(jTloginname, pb.login);
        bind_vars.pairs.add(new UserRightsPair(jCUserRights, pb.plevel) );
        bind_vars.bindVar(jClocked, pb.locked);

        bind_vars.var_to_gui();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtTitle = new javax.swing.JTextField();
        jTforename = new javax.swing.JTextField();
        jTsurname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTloginname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPasswd1 = new javax.swing.JPasswordField();
        jPasswd2 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jCUserRights = new javax.swing.JComboBox();
        jClocked = new javax.swing.JCheckBox();
        jBCreate = new javax.swing.JButton();

        jLabel1.setText("Titel");

        jLabel2.setText("Vorname");

        jLabel3.setText("Nachname");

        jLabel4.setText("Benutzername");

        jLabel5.setText("Passwort");

        jLabel6.setText("Wiederholung");

        jLabel7.setText("Berechtigungsstufe");

        jCUserRights.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jClocked.setText("Benutzer ist gesperrt");

        jBCreate.setText("Anlegen");
        jBCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(jTforename)
                            .addComponent(jTsurname)
                            .addComponent(jTloginname)
                            .addComponent(jPasswd1)
                            .addComponent(jPasswd2)
                            .addComponent(jCUserRights, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jClocked, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBCreate)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTforename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTsurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTloginname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jPasswd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jPasswd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jCUserRights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jClocked)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jBCreate)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCreateActionPerformed

        bind_vars.gui_to_var();

        logger.info( String.format("Neuen Benutzer Anlegen: %s %s %s level: %d",
                    pb.title.toString(),
                    pb.surname.toString(),
                    pb.name.toString(),
                    pb.plevel.getValue() ));


        if( jTloginname.getText().trim().isEmpty() )
        {
            JOptionPane.showMessageDialog(jBCreate,
                    StringUtils.autoLineBreak("Es muÃ zumindest ein Benutzername angegeben werden."), "Fehler", JOptionPane.ERROR_MESSAGE);

            jTloginname.requestFocus();
            return;
        }

        final String passwd1 = new String(jPasswd1.getPassword()).trim();
        final String passwd2= new String(jPasswd2.getPassword()).trim();

        if( passwd1.isEmpty() )
        {
            JOptionPane.showMessageDialog(getParent(),
                    StringUtils.autoLineBreak("Bitte geben Sie ein Passwort ein."), "Fehler", JOptionPane.ERROR_MESSAGE);

            jTloginname.requestFocus();
            return;
        }       

        if( !passwd1.equals(passwd2) )
        {
            JOptionPane.showMessageDialog(getParent(),
                    StringUtils.autoLineBreak("Die PasswÃ¶rter unterscheiden sich!"), "Fehler", JOptionPane.ERROR_MESSAGE);

            jPasswd1.setText("");
            jPasswd2.setText("");

            jPasswd1.requestFocus();
            return;
        }

        new AutoMBox(UserData.class.getName()) {

            @Override
            public void do_stuff() throws Exception {

                Vector<DBPb> other_pers = trans.fetchTable2(new DBPb(), "where " + trans.markColumn(pb.login) + " = '" + pb.login + "'");

                if( !other_pers.isEmpty() )
                {
                    trans.rollback();

                    JOptionPane.showMessageDialog(getParent(),
                             StringUtils.autoLineBreak("Der Benutzername ist bereits in Verwendung. Bitte wÃ¤hlen Sie einen anderen."),
                            "Fehler", JOptionPane.ERROR_MESSAGE);

                    jTloginname.setSelectionStart(0);
                    jTloginname.setSelectionEnd(jTloginname.getText().length());
                    jTloginname.requestFocus();
                                        
                } else {

                    MD5Calc md5 = new MD5Calc("MD5");
                    pb.pwd.loadFromCopy(md5.calcChecksum(passwd1));

                    pb.id.loadFromCopy(base.getNewSequenceValue(AdminDlg.UM_ID_SEQ));
                    pb.hist.setAnHist(root.getUserName());
                    trans.insertValues(pb);

                    trans.commit();
                }
            }
        };

    }//GEN-LAST:event_jBCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCreate;
    private javax.swing.JComboBox jCUserRights;
    private javax.swing.JCheckBox jClocked;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField jPasswd1;
    private javax.swing.JPasswordField jPasswd2;
    private javax.swing.JTextField jTforename;
    private javax.swing.JTextField jTloginname;
    private javax.swing.JTextField jTsurname;
    private javax.swing.JTextField jtTitle;
    // End of variables declaration//GEN-END:variables

}
